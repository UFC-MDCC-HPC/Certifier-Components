<?xml version="1.0" encoding="ASCII"?>
<component:component xmlns:component="http://www.example.org/HashComponent">
  <header hash_component_UID="002400000480000094000000060200000024000052534131000400001100000019aa69e7ca7be3ee4825e96509c7b6463c663fe4244c8e30ce5f1beb9a682f50e464d312d1d0847f4f49f307d378417320aacf3c92d4d24ea22e23f2bcd0ca62c14f47328609a3b87bb6380818d4595a7eb42567ccfab53ef958a095a7f85d3efb282dda86ef5b2255e1507f5ebd1604bed356a1f8f055c9a024b2da414e3cb3" isAbstract="false" kind="Computation" name="SWC2Impl" packagePath="br.ufc.mdcc.hpc.shelf.certifier.impl">
    <baseType>
      <extensionType>
        <implements>true</implements>
      </extensionType>
      <component hash_component_UID="00240000048000009400000006020000002400005253413100040000110000006bb7641a8d6c6038cc0995f9adc25bb40c27df77feb45dc060afcfb572026b828bd6198104923a6d41e14ab333f5157c386594f82870808552926a4dfc8e9068230cd80d4ef95ea485ec12420214e1ae7c2b55ba9e3be924adff3fcf90e62cb8d29cf24dca16ebf75e5dfddba574ab5fb50d6317dd1202fbfbf38ff2700ecbcb" localRef="base" location="br.ufc.mdcc.hpc.shelf.certifier.SWC2/SWC2.hpe" name="SWC2" package="br.ufc.mdcc.hpc.shelf.certifier" version="1.0.0.0">
        <visualDescription h="60" w="100" x="170" y="224">
          <color b="255" g="255" r="255"/>
        </visualDescription>
        <port index_replica="0" localRef="verify_data1" location="br.ufc.mdcc.hpc.shelf.tactical.environment.VerifyDataPortSWC2/VerifyDataPortSWC2.hpe" multiple="false" name="VerifyDataPortSWC2" package="br.ufc.mdcc.hpc.shelf.tactical.environment" exposed="true">
          <visualDescription h="60" w="100" x="274" y="199">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <parameter formFieldId="server_port_type" varName="X###426163824"/>
          <unitBounds facet="0" facet_instance="0" facet_instance_enclosing="0" parallel="false" uRef="client">
            <visualDescription h="20" w="20" x="5" y="2"/>
          </unitBounds>
          <unitBounds facet="1" facet_instance="0" parallel="false" uRef="server">
            <visualDescription h="20" w="20" x="28" y="2"/>
          </unitBounds>
        </port>
        <port index_replica="0" localRef="verify_data3" location="br.ufc.mdcc.hpc.shelf.tactical.environment.VerifyDataPortSWC2/VerifyDataPortSWC2.hpe" multiple="false" name="VerifyDataPortSWC2" package="br.ufc.mdcc.hpc.shelf.tactical.environment" exposed="true">
          <visualDescription h="60" w="100" x="295" y="293">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <parameter formFieldId="server_port_type" varName="X###1708524214"/>
          <unitBounds facet="0" facet_instance="0" facet_instance_enclosing="0" parallel="false" uRef="client">
            <visualDescription h="20" w="20" x="5" y="2"/>
          </unitBounds>
          <unitBounds facet="1" facet_instance="0" parallel="false" uRef="server">
            <visualDescription h="20" w="20" x="28" y="2"/>
          </unitBounds>
        </port>
        <port index_replica="0" localRef="verify_data4" location="br.ufc.mdcc.hpc.shelf.tactical.environment.VerifyDataPortSWC2/VerifyDataPortSWC2.hpe" multiple="false" name="VerifyDataPortSWC2" package="br.ufc.mdcc.hpc.shelf.tactical.environment" exposed="true">
          <visualDescription h="60" w="100" x="74" y="281">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <parameter formFieldId="server_port_type" varName="X###211745374"/>
          <unitBounds facet="0" facet_instance="0" facet_instance_enclosing="0" parallel="false" uRef="client">
            <visualDescription h="20" w="20" x="5" y="2"/>
          </unitBounds>
          <unitBounds facet="1" facet_instance="0" parallel="false" uRef="server">
            <visualDescription h="20" w="20" x="28" y="2"/>
          </unitBounds>
        </port>
        <port index_replica="0" localRef="verify_data2" location="br.ufc.mdcc.hpc.shelf.tactical.environment.VerifyDataPortSWC2/VerifyDataPortSWC2.hpe" multiple="false" name="VerifyDataPortSWC2" package="br.ufc.mdcc.hpc.shelf.tactical.environment" exposed="true">
          <visualDescription h="60" w="100" x="405" y="281">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <parameter formFieldId="server_port_type" varName="X###312474980"/>
          <unitBounds facet="0" facet_instance="0" facet_instance_enclosing="0" parallel="false" uRef="client">
            <visualDescription h="20" w="20" x="5" y="2"/>
          </unitBounds>
          <unitBounds facet="1" facet_instance="0" parallel="false" uRef="server">
            <visualDescription h="20" w="20" x="28" y="2"/>
          </unitBounds>
        </port>
        <port index_replica="0" localRef="verify1" location="br.ufc.mdcc.hpc.storm.binding.task.TaskBindingBase/TaskBindingBase.hpe" multiple="false" name="TaskBindingBase" package="br.ufc.mdcc.hpc.storm.binding.task" exposed="true">
          <visualDescription h="60" w="100" x="16" y="354">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <parameter formFieldId="task_port_type" varName="X###1169471945"/>
          <unitBounds facet="0" facet_instance="0" facet_instance_enclosing="0" parallel="true" uRef="peer">
            <visualDescription h="20" w="20" x="5" y="2"/>
          </unitBounds>
        </port>
        <port index_replica="0" localRef="verify2" location="br.ufc.mdcc.hpc.storm.binding.task.TaskBindingBase/TaskBindingBase.hpe" multiple="false" name="TaskBindingBase" package="br.ufc.mdcc.hpc.storm.binding.task" exposed="true">
          <visualDescription h="60" w="100" x="112" y="407">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <parameter formFieldId="task_port_type" varName="X###1544642271"/>
          <unitBounds facet="0" facet_instance="0" facet_instance_enclosing="0" parallel="true" uRef="peer">
            <visualDescription h="20" w="20" x="5" y="2"/>
          </unitBounds>
        </port>
        <port index_replica="0" localRef="verify3" location="br.ufc.mdcc.hpc.storm.binding.task.TaskBindingBase/TaskBindingBase.hpe" multiple="false" name="TaskBindingBase" package="br.ufc.mdcc.hpc.storm.binding.task" exposed="true">
          <visualDescription h="60" w="100" x="263" y="418">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <parameter formFieldId="task_port_type" varName="X###2020323761"/>
          <unitBounds facet="0" facet_instance="0" facet_instance_enclosing="0" parallel="true" uRef="peer">
            <visualDescription h="20" w="20" x="5" y="2"/>
          </unitBounds>
        </port>
        <port index_replica="0" localRef="verify4" location="br.ufc.mdcc.hpc.storm.binding.task.TaskBindingBase/TaskBindingBase.hpe" multiple="false" name="TaskBindingBase" package="br.ufc.mdcc.hpc.storm.binding.task" exposed="true">
          <visualDescription h="60" w="100" x="403" y="410">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <parameter formFieldId="task_port_type" varName="X###1717508410"/>
          <unitBounds facet="0" facet_instance="0" facet_instance_enclosing="0" parallel="true" uRef="peer">
            <visualDescription h="20" w="20" x="5" y="2"/>
          </unitBounds>
        </port>
        <unitBounds facet="0" facet_instance="0" facet_instance_enclosing="0" parallel="true" uRef="certify">
          <visualDescription h="20" w="20" x="5" y="2"/>
        </unitBounds>
      </component>
    </baseType>
    <versions field1="1" field2="0" field3="0" field4="0"/>
    <visualAttributes>
      <color b="255" g="255" r="255"/>
    </visualAttributes>
    <facet_configuration facet="0" multiple="false"/>
  </header>
  <componentInfo>
    <interface iRef="ISWC2Impl" nArgs="0">
      <slice isRef="verify_data2">
        <originRef cRef="verify_data2" iRef="IVerifyClientPortSWC2"/>
        <visualDescription h="10" w="10" x="44" y="21"/>
      </slice>
      <slice isRef="verify_data3">
        <originRef cRef="verify_data3" iRef="IVerifyClientPortSWC2"/>
        <visualDescription h="10" w="10" x="33" y="21"/>
      </slice>
      <slice isRef="verify_data1">
        <originRef cRef="verify_data1" iRef="IVerifyClientPortSWC2"/>
        <visualDescription h="10" w="10" x="27" y="18"/>
      </slice>
      <slice isRef="verify4">
        <originRef cRef="verify4" iRef="ITaskPort"/>
        <visualDescription h="10" w="10" x="49" y="23"/>
      </slice>
      <slice isRef="verify3">
        <originRef cRef="verify3" iRef="ITaskPort"/>
        <visualDescription h="10" w="10" x="45" y="20"/>
      </slice>
      <slice isRef="verify_data4">
        <originRef cRef="verify_data4" iRef="IVerifyClientPortSWC2"/>
        <visualDescription h="10" w="10" x="17" y="10"/>
      </slice>
      <slice isRef="verify2">
        <originRef cRef="verify2" iRef="ITaskPort"/>
        <visualDescription h="10" w="10" x="29" y="17"/>
      </slice>
      <slice isRef="verify1">
        <originRef cRef="verify1" iRef="ITaskPort"/>
        <visualDescription h="10" w="10" x="9" y="27"/>
      </slice>
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="/* Automatically Generated Code */&#xA;&#xA;using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.hpc.shelf.tactical.environment.VerifyDataPortClientTypeSWC2;&#xA;using br.ufc.mdcc.hpc.storm.binding.task.TaskBindingBase;&#xA;using br.ufc.mdcc.hpc.shelf.tactical.task.VerifyPortType;&#xA;using br.ufc.mdcc.hpc.shelf.certifier.SWC2;&#xA;using br.ufc.mdcc.hpc.shelf.tactical.environment.VerifyDataPortSWC2;&#xA;&#xA;namespace br.ufc.mdcc.hpc.shelf.certifier.impl.SWC2Impl &#xA;{&#xA;&#x9;public abstract class BaseISWC2Impl: Computation, BaseISWC2&#xA;&#x9;{&#xA;&#x9;&#x9;private IVerifyClientPortSWC2 verify_data1 = null;&#xA;&#xA;&#x9;&#x9;protected IVerifyClientPortSWC2 Verify_data1&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.verify_data1 == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.verify_data1 = (IVerifyClientPortSWC2) Services.getPort(&quot;verify_data1&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.verify_data1;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;private IVerifyClientPortSWC2 verify_data2 = null;&#xA;&#xA;&#x9;&#x9;protected IVerifyClientPortSWC2 Verify_data2&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.verify_data2 == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.verify_data2 = (IVerifyClientPortSWC2) Services.getPort(&quot;verify_data2&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.verify_data2;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;private IVerifyClientPortSWC2 verify_data3 = null;&#xA;&#xA;&#x9;&#x9;protected IVerifyClientPortSWC2 Verify_data3&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.verify_data3 == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.verify_data3 = (IVerifyClientPortSWC2) Services.getPort(&quot;verify_data3&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.verify_data3;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;private IVerifyClientPortSWC2 verify_data4 = null;&#xA;&#xA;&#x9;&#x9;protected IVerifyClientPortSWC2 Verify_data4&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.verify_data4 == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.verify_data4 = (IVerifyClientPortSWC2) Services.getPort(&quot;verify_data4&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.verify_data4;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;private ITaskPort&lt;IVerifyPortType> verify1 = null;&#xA;&#xA;&#x9;&#x9;protected ITaskPort&lt;IVerifyPortType> Verify1&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.verify1 == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.verify1 = (ITaskPort&lt;IVerifyPortType>) Services.getPort(&quot;verify1&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.verify1;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;private ITaskPort&lt;IVerifyPortType> verify2 = null;&#xA;&#xA;&#x9;&#x9;protected ITaskPort&lt;IVerifyPortType> Verify2&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.verify2 == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.verify2 = (ITaskPort&lt;IVerifyPortType>) Services.getPort(&quot;verify2&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.verify2;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;private ITaskPort&lt;IVerifyPortType> verify3 = null;&#xA;&#xA;&#x9;&#x9;protected ITaskPort&lt;IVerifyPortType> Verify3&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.verify3 == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.verify3 = (ITaskPort&lt;IVerifyPortType>) Services.getPort(&quot;verify3&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.verify3;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;private ITaskPort&lt;IVerifyPortType> verify4 = null;&#xA;&#xA;&#x9;&#x9;protected ITaskPort&lt;IVerifyPortType> Verify4&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.verify4 == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.verify4 = (ITaskPort&lt;IVerifyPortType>) Services.getPort(&quot;verify4&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.verify4;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}" name="BaseISWC2Impl.cs" srcType="base" uri="br.ufc.mdcc.hpc.shelf.certifier.impl.SWC2Impl/bin/1.0.0.0/BaseISWC2Impl.dll" versionId="1.0.0.0">
          <dependency>br.ufc.mdcc.hpc.shelf.tactical.environment.VerifyDataPort/bin/1.0.0.0/IVerifyClientPort.dll</dependency>
          <dependency>br.ufc.mdcc.hpc.shelf.tactical.environment.VerifyDataPortClientType/bin/1.0.0.0/IVerifyDataPortClientType.dll</dependency>
          <dependency>br.ufc.mdcc.hpc.storm.binding.task.TaskBindingBase/bin/1.0.0.0/ITaskPort.dll</dependency>
          <dependency>br.ufc.mdcc.hpc.shelf.tactical.task.VerifyPortType/bin/1.0.0.0/IVerifyPortType.dll</dependency>
          <dependency>br.ufc.mdcc.hpc.shelf.certifier.SWC2/bin/1.0.0.0/BaseICertifier.dll</dependency>
        </file>
        <file contents="using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.hpc.shelf.certifier.SWC2;&#xA;using br.ufc.mdcc.hpc.shelf.certifier.Certifier;&#xA;using System.Diagnostics;&#xA;using System.IO;&#xA;using  br.ufc.mdcc.hpc.shelf.tactical.task.VerifyPortType;&#xA;using br.ufc.mdcc.hpc.storm.binding.task.TaskBindingBase;&#xA;&#xA;&#xA;namespace br.ufc.mdcc.hpc.shelf.certifier.impl.SWC2Impl&#xA;{&#xA;&#x9;public class ISWC2Impl : BaseISWC2Impl,ISWC2&#xA;&#x9;{&#xA;&#x9;&#x9;private string work_path = null;&#xA;&#x9;&#x9;private string mCRL2_file = System.Environment.GetEnvironmentVariable(&quot;MCRL2_FILE&quot;);&#xA;&#x9;&#x9;private int num_properties = 20;&#xA;&#xA;&#x9;&#x9;public string[] properties_files;&#xA;&#xA;&#x9;&#x9;public override void main()&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;work_path = System.Environment.GetEnvironmentVariable (&quot;PATH_CERTIFIER&quot;);&#xA;&#x9;&#x9;&#x9;if (work_path == null)&#xA;&#x9;&#x9;&#x9;&#x9;work_path = System.Environment.GetEnvironmentVariable (&quot;HOME&quot;);&#xA;&#x9;&#x9;&#x9;Console.WriteLine (&quot;WORK PATH OF CERTIFIER is &quot; + work_path + Path.DirectorySeparatorChar);&#xA;&#xA;&#x9;&#x9;&#x9;Stopwatch sw = new Stopwatch();&#xA;&#x9;&#x9;&#x9;sw.Start();&#xA;&#x9;&#x9;&#x9;setData();&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;Verify1.invoke (IVerify.VERIFY_PERFORM);&#x9;&#x9;&#xA;&#xA;&#x9;&#x9;&#x9;IActionFutureSet future_iteration = null;&#xA;&#xA;&#x9;&#x9;&#x9;IActionFuture future_conclusive = null; &#xA;&#x9;&#x9;&#x9;Verify1.invoke (IVerify.VERIFY_CONCLUSIVE, out future_conclusive);&#xA;&#x9;&#x9;&#x9;future_iteration = future_conclusive.createSet ();&#xA;&#xA;&#x9;&#x9;&#x9;IActionFuture future_inconclusive = null; &#xA;&#x9;&#x9;&#x9;Verify1.invoke (IVerify.VERIFY_INCONCLUSIVE, out future_inconclusive);&#xA;&#x9;&#x9;&#x9;future_iteration.addAction (future_inconclusive);&#xA;&#xA;&#x9;&#x9;&#x9;IActionFuture result = future_iteration.waitAny ();&#xA;&#xA;&#x9;&#x9;&#x9;sw.Stop();&#xA;&#xA;&#x9;&#x9;&#x9;Console.WriteLine(&quot;Tempo total de verifica&#xe7;&#xe3;o={0} : INCONCLUSIVE ? {1}&quot;,sw.Elapsed, result == future_inconclusive);&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;public void setData()&#xA;&#x9;&#x9;{&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;Console.WriteLine (&quot;setData *** num_properties = {0}&quot;, num_properties);&#xA;&#x9;&#x9;&#x9;Verify_data1.Client.setNumProperties (num_properties);&#xA;&#xA;&#x9;&#x9;&#x9;properties_files = new string[num_properties];&#xA;&#xA;&#x9;&#x9;&#x9;StreamReader sr = new StreamReader(work_path + Path.DirectorySeparatorChar + mCRL2_file);&#xA;&#x9;&#x9;&#x9;string line = sr.ReadToEnd();&#xA;&#xA;&#x9;&#x9;&#x9;Verify_data1.Client.setMcrl2File (line);&#xA;&#xA;&#x9;&#x9;&#x9;int i;&#xA;&#x9;&#x9;&#x9;for (i = 0; i &lt; num_properties; i++) &#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;sr = new StreamReader (work_path + Path.DirectorySeparatorChar + &quot;property&quot; + i + &quot;.mcf&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;line = sr.ReadToEnd ();&#xA;&#x9;&#x9;&#x9;&#x9;properties_files [i] = line;&#xA;&#x9;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;Verify_data1.Client.setPropertyFiles (properties_files);&#xA;&#xA;&#x9;&#x9;&#x9;Verify_data1.Client.setNumPropsTacticals ();&#xA;&#x9;&#x9;&#x9;Verify_data1.Client.setIndexFirstPropTacticals ();&#xA;&#x9;&#x9;&#x9;Verify_data1.Client.setPropertiesTacticals ();&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;" name="ISWC2Impl.cs" srcType="user" uri="br.ufc.mdcc.hpc.shelf.certifier.impl.SWC2Impl/bin/1.0.0.0/ISWC2Impl.dll" versionId="1.0.0.0">
          <dependency>%WORKSPACE/br.ufc.mdcc.hpc.shelf.certifier.impl.SWC2Impl/bin/1.0.0.0/BaseISWC2Impl.dll</dependency>
          <dependency>br.ufc.mdcc.hpc.shelf.certifier.SWC2/bin/1.0.0.0/ICertifier.dll</dependency>
        </file>
      </sources>
      <visualDescription h="40" w="80" x="202" y="67">
        <color b="255" g="0" r="0"/>
      </visualDescription>
      <port name="verify_data2">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="verify_data2" sRef="verify_data2"/>
      </port>
      <port name="verify_data3">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="verify_data3" sRef="verify_data3"/>
      </port>
      <port name="verify_data1">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="verify_data1" sRef="verify_data1"/>
      </port>
      <port name="verify4">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="verify4" sRef="verify4"/>
      </port>
      <port name="verify3">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="verify3" sRef="verify3"/>
      </port>
      <port name="verify_data4">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="verify_data4" sRef="verify_data4"/>
      </port>
      <port name="verify2">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="verify2" sRef="verify2"/>
      </port>
      <port name="verify1">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="verify1" sRef="verify1"/>
      </port>
      <action id="main">
        <protocol/>
      </action>
    </interface>
    <unit facet="0" iRef="ISWC2Impl" multiple="true" private="false" replica="0" uRef="certify" visibleInterface="true">
      <super cRef="base" uRef="certify"/>
      <visualDescription h="40" w="80" x="78" y="115"/>
    </unit>
  </componentInfo>
</component:component>
//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.08.06 at 12:26:07 AM BRT 
//


package hpcshelf.certification.hash.component;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for UnitType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="UnitType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="super" type="{http://www.example.org/HashComponent}UnitRefType" minOccurs="0"/>
 *         &lt;element name="slices" type="{http://www.example.org/HashComponent}UnitSliceType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="visualDescription" type="{http://www.example.org/HashComponent}VisualElementAttributes"/>
 *       &lt;/sequence>
 *       &lt;attribute name="uRef" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="iRef" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="private" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="visibleInterface" type="{http://www.w3.org/2001/XMLSchema}boolean" default="true" />
 *       &lt;attribute name="multiple" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="replica" type="{http://www.w3.org/2001/XMLSchema}int" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "UnitType", propOrder = {
    "_super",
    "slices",
    "visualDescription"
})
public class UnitType {

    @XmlElement(name = "super")
    protected UnitRefType _super;
    protected List<UnitSliceType> slices;
    @XmlElement(required = true)
    protected VisualElementAttributes visualDescription;
    @XmlAttribute(name = "uRef", required = true)
    protected String uRef;
    @XmlAttribute(name = "iRef", required = true)
    protected String iRef;
    @XmlAttribute(name = "private")
    protected Boolean _private;
    @XmlAttribute(name = "visibleInterface")
    protected Boolean visibleInterface;
    @XmlAttribute(name = "multiple")
    protected Boolean multiple;
    @XmlAttribute(name = "replica")
    protected Integer replica;

    /**
     * Gets the value of the super property.
     * 
     * @return
     *     possible object is
     *     {@link UnitRefType }
     *     
     */
    public UnitRefType getSuper() {
        return _super;
    }

    /**
     * Sets the value of the super property.
     * 
     * @param value
     *     allowed object is
     *     {@link UnitRefType }
     *     
     */
    public void setSuper(UnitRefType value) {
        this._super = value;
    }

    /**
     * Gets the value of the slices property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the slices property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSlices().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link UnitSliceType }
     * 
     * 
     */
    public List<UnitSliceType> getSlices() {
        if (slices == null) {
            slices = new ArrayList<UnitSliceType>();
        }
        return this.slices;
    }

    /**
     * Gets the value of the visualDescription property.
     * 
     * @return
     *     possible object is
     *     {@link VisualElementAttributes }
     *     
     */
    public VisualElementAttributes getVisualDescription() {
        return visualDescription;
    }

    /**
     * Sets the value of the visualDescription property.
     * 
     * @param value
     *     allowed object is
     *     {@link VisualElementAttributes }
     *     
     */
    public void setVisualDescription(VisualElementAttributes value) {
        this.visualDescription = value;
    }

    /**
     * Gets the value of the uRef property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getURef() {
        return uRef;
    }

    /**
     * Sets the value of the uRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setURef(String value) {
        this.uRef = value;
    }

    /**
     * Gets the value of the iRef property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getIRef() {
        return iRef;
    }

    /**
     * Sets the value of the iRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setIRef(String value) {
        this.iRef = value;
    }

    /**
     * Gets the value of the private property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isPrivate() {
        return _private;
    }

    /**
     * Sets the value of the private property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setPrivate(Boolean value) {
        this._private = value;
    }

    /**
     * Gets the value of the visibleInterface property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isVisibleInterface() {
        if (visibleInterface == null) {
            return true;
        } else {
            return visibleInterface;
        }
    }

    /**
     * Sets the value of the visibleInterface property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setVisibleInterface(Boolean value) {
        this.visibleInterface = value;
    }

    /**
     * Gets the value of the multiple property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isMultiple() {
        return multiple;
    }

    /**
     * Sets the value of the multiple property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setMultiple(Boolean value) {
        this.multiple = value;
    }

    /**
     * Gets the value of the replica property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getReplica() {
        return replica;
    }

    /**
     * Sets the value of the replica property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setReplica(Integer value) {
        this.replica = value;
    }

}
